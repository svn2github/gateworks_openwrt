--- a/gst/rtsp-server/rtsp-media-factory.c
+++ b/gst/rtsp-server/rtsp-media-factory.c
@@ -22,6 +22,8 @@
 #define DEFAULT_LAUNCH         NULL
 #define DEFAULT_SHARED         FALSE
 #define DEFAULT_EOS_SHUTDOWN   FALSE
+#define DEFAULT_PROTOCOLS      GST_RTSP_LOWER_TRANS_UDP | GST_RTSP_LOWER_TRANS_TCP
+//#define DEFAULT_PROTOCOLS      GST_RTSP_LOWER_TRANS_UDP_MCAST
 
 enum
 {
@@ -29,6 +31,7 @@ enum
   PROP_LAUNCH,
   PROP_SHARED,
   PROP_EOS_SHUTDOWN,
+  PROP_PROTOCOLS,
   PROP_LAST
 };
 
@@ -96,6 +99,11 @@ gst_rtsp_media_factory_class_init (GstRT
           "Send EOS down the pipeline before shutting down",
           DEFAULT_EOS_SHUTDOWN, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
+  g_object_class_install_property (gobject_class, PROP_PROTOCOLS,
+      g_param_spec_boolean ("protocols", "Protocols",
+          "Specify the allowed protocols", DEFAULT_PROTOCOLS,
+	  G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+
   klass->gen_key = default_gen_key;
   klass->get_element = default_get_element;
   klass->construct = default_construct;
@@ -112,6 +120,7 @@ gst_rtsp_media_factory_init (GstRTSPMedi
   factory->launch = g_strdup (DEFAULT_LAUNCH);
   factory->shared = DEFAULT_SHARED;
   factory->eos_shutdown = DEFAULT_EOS_SHUTDOWN;
+  factory->protocols = DEFAULT_PROTOCOLS;
 
   factory->lock = g_mutex_new ();
   factory->medias_lock = g_mutex_new ();
@@ -151,6 +160,10 @@ gst_rtsp_media_factory_get_property (GOb
       g_value_set_boolean (value,
           gst_rtsp_media_factory_is_eos_shutdown (factory));
       break;
+    case PROP_PROTOCOLS:
+      g_value_set_boolean (value,
+          gst_rtsp_media_factory_get_protocols (factory));
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, propid, pspec);
   }
@@ -173,6 +186,9 @@ gst_rtsp_media_factory_set_property (GOb
       gst_rtsp_media_factory_set_eos_shutdown (factory,
           g_value_get_boolean (value));
       break;
+    case PROP_PROTOCOLS:
+      gst_rtsp_media_factory_set_protocols (factory, g_value_get_flags (value));
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, propid, pspec);
   }
@@ -377,6 +393,46 @@ gst_rtsp_media_factory_get_auth (GstRTSP
   return result;
 }
 
+/**
+ * gst_rtsp_media_factory_set_protocols:
+ * @factory: a #GstRTSPMediaFactory
+ * @protocols: the new flags
+ *
+ * Configure allowed media protocols.
+ */
+void
+gst_rtsp_media_factory_set_protocols (GstRTSPMediaFactory * factory,
+    GstRTSPLowerTrans protocols)
+{
+  g_return_if_fail (GST_IS_RTSP_MEDIA_FACTORY (factory));
+
+  GST_RTSP_MEDIA_FACTORY_LOCK (factory);
+  factory->protocols = protocols;
+  GST_RTSP_MEDIA_FACTORY_UNLOCK (factory);
+}
+
+/**
+ * gst_rtsp_media_factory_get_protocols:
+ * @factory: a #GstRTSPMediaFactory
+ *
+ * Get the allowed protocols for media.
+ *
+ * Returns: a #GstRTSPLowerTrans.
+ */
+GstRTSPLowerTrans
+gst_rtsp_media_factory_get_protocols(GstRTSPMediaFactory * factory)
+{
+  GstRTSPLowerTrans result;
+
+  g_return_val_if_fail (GST_IS_RTSP_MEDIA_FACTORY (factory), FALSE);
+
+  GST_RTSP_MEDIA_FACTORY_LOCK (factory);
+  result = factory->protocols;
+  GST_RTSP_MEDIA_FACTORY_UNLOCK (factory);
+
+  return result;
+}
+
 static gboolean
 compare_media (gpointer key, GstRTSPMedia * media1, GstRTSPMedia * media2)
 {
@@ -660,15 +716,18 @@ default_configure (GstRTSPMediaFactory *
 {
   gboolean shared, eos_shutdown;
   GstRTSPAuth *auth;
+  GstRTSPLowerTrans protocols;
 
   /* configure the sharedness */
   GST_RTSP_MEDIA_FACTORY_LOCK (factory);
   shared = factory->shared;
   eos_shutdown = factory->eos_shutdown;
+  protocols = factory->protocols;
   GST_RTSP_MEDIA_FACTORY_UNLOCK (factory);
 
   gst_rtsp_media_set_shared (media, shared);
   gst_rtsp_media_set_eos_shutdown (media, eos_shutdown);
+  gst_rtsp_media_set_protocols (media, protocols);
 
   if ((auth = gst_rtsp_media_factory_get_auth (factory))) {
     gst_rtsp_media_set_auth (media, auth);
--- a/gst/rtsp-server/rtsp-media-factory.h
+++ b/gst/rtsp-server/rtsp-media-factory.h
@@ -64,6 +64,7 @@ struct _GstRTSPMediaFactory {
   gboolean      shared;
   gboolean      eos_shutdown;
   GstRTSPAuth  *auth;
+  GstRTSPLowerTrans protocols;
 
   GMutex       *medias_lock;
   GHashTable   *medias;
@@ -121,6 +122,9 @@ gboolean              gst_rtsp_media_fac
 void                  gst_rtsp_media_factory_set_auth     (GstRTSPMediaFactory *factory, GstRTSPAuth *auth);
 GstRTSPAuth *         gst_rtsp_media_factory_get_auth     (GstRTSPMediaFactory *factory);
 
+void                  gst_rtsp_media_factory_set_protocols (GstRTSPMediaFactory *factory, GstRTSPLowerTrans protocols);
+GstRTSPLowerTrans     gst_rtsp_media_factory_get_protocols (GstRTSPMediaFactory *factory);
+
 
 /* creating the media from the factory and a url */
 GstRTSPMedia *        gst_rtsp_media_factory_construct    (GstRTSPMediaFactory *factory,
